---

- name: service tmp dir
  file:
    path: service-tmp
    state: directory

- name: Set OS distribution dependent variables
  include_vars: kube-apiserver.yml
  
- name: debug
  debug: msg={{ kube_apiserveradmission_control }}



- name: make etcd service
  template: src=service.j2 dest=service-tmp/etcd.service
  vars:
    description: etcd server
    after: network.service
    wants: etcd.service
    work_directory: "{{ etcd_work_directory }}"
    execstart: "{{ bin_path_to }}/etcd"


- name: make apiserver service
  template:
    src: service.j2
    dest: service-tmp/kube-apiserver.service
  vars:
    description: kube apiserver
    after: etcd.service
    wants: etcd.service
    execstart: "{{ bin_path_to }}/kube-apiserver --etcd-servers={{ etcd_servers }} {{ apiserver_args}}"


- name: make kube-controller-manager service
  template:
    src: service.j2
    dest: service-tmp/kube-controller-manager.service
  vars:
    description: kube-controller-manager apiserver
    after: kube-apiserver.service
    requires: kube-apiserver.service
    execstart: "{{ bin_path_to }}/kube-controller-manager --master={{ api_server }} {{ kube_controller_manager_args}}"


- name: make kube-scheduler service
  template:
    src: service.j2
    dest: service-tmp/kube-scheduler.service
  vars:
    description: kube-scheduler apiserver
    after: kube-apiserver.service
    requires: kube-apiserver.service
    execstart: "{{ bin_path_to }}/kube-scheduler --master={{ api_server }} {{ kube_scheduler_args}}"


- name: make kube-proxy service
  template:
    src: service.j2
    dest: service-tmp/kube-proxy.service
  vars:
    description: kube-proxy apiserver
    after: network.service
    requires: network.service
    execstart: "{{ bin_path_to }}/kube-proxy --master={{ api_server }} {{ kube_proxy_args}}"


- name: make kubelet service
  template:
    src: service.j2
    dest: service-tmp/kubelet.service
  vars:
    description: kubelet service
    after: docker.service
    requires: docker.service
    execstart: "{{ bin_path_to }}/kubelet --api-servers={{ api_server }} {{ kubelet_args}}"


